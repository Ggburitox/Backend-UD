org: thiagorm
service: diagram-studio-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 30
  iam:
    role: arn:aws:iam::264641143307:role/LabRole
  environment:
    USERS_TABLE_NAME: t_usuarios_UD
    TOKENS_TABLE_NAME: t_tokens_acceso
    BUCKET_NAME: diagram-studio-storage

functions:
  RegistarUsuarioUD:
    handler: register.lambda_handler
    events:
      - http:
          path: /auth/register
          method: post
          cors: true

  LoginUsuarioUD:
    handler: login.lambda_handler
    events:
      - http:
          path: /auth/login
          method: post
          cors: true

  generar_diagrama:
    handler: generar_diagrama.lambda_handler
    events:
      - http:
          path: /diagrams/generate
          method: post
          cors: true

  descargar_diagrama:
    handler: descargar_diagrama.lambda_handler
    events:
      - http:
          path: /diagrams/download
          method: post
          cors: true

resources:
  Resources:
    TablaUsuarios:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: usuario_id
            AttributeType: S
        KeySchema:
          - AttributeName: usuario_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    TablaTokens:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TOKENS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    DiagramsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
